{"version":3,"sources":["App.js","index.js"],"names":["TicTacToeComponent","useState","player1","setPlayer1","player2","setPlayer2","begin","setBegin","numberOfTurns","setNumberOfTurns","winnerAnnounced","setWinnerAnnounced","grid","resultSet","matrix","setMatrix","turn","setTurn","xPlacement","setXPlacement","oPlacement","setOPlacement","boxClick","position","matrixShadow","xPlacementShadow","oPlacementShadow","alert","push","useEffect","forEach","solution","includes","Container","Row","className","Form","Col","Control","placeholder","onChange","event","target","value","Button","variant","onClick","length","style","size","window","location","reload","border","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f9d81f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './App.css';\n\nfunction TicTacToeComponent() {\n  let [player1, setPlayer1] = useState('');\n  let [player2, setPlayer2] = useState('');\n  let [begin, setBegin] = useState(false);\n  let [numberOfTurns, setNumberOfTurns] = useState(0);\n  let [winnerAnnounced, setWinnerAnnounced] = useState(false);\n\n  let grid = ['', '', '', '', '', '', '', '', ''];\n\n  let resultSet = [\n    [0, 1, 2],\n    [0, 3, 6],\n    [0, 4, 8],\n    [1, 4, 7],\n    [2, 5, 8],\n    [2, 4, 6],\n    [3, 4, 5],\n    [6, 7, 8],\n  ];\n\n  let [matrix, setMatrix] = useState(grid);\n  let [turn, setTurn] = useState(1);\n  let [xPlacement, setXPlacement] = useState([]);\n  let [oPlacement, setOPlacement] = useState([]);\n\n  function handlePlayer1Change(event) {\n    setPlayer1(event.target.value);\n  }\n\n  function handlePlayer2Change(event) {\n    setPlayer2(event.target.value);\n  }\n\n  function initiateGame() {\n    if (player1 === player2)\n      alert(\"Both players cannot have same names\");\n    else if (player1.length > 0 && player2.length > 0)\n      setBegin(true);\n    else\n      alert('Please enter both player names');\n  }\n\n  function resetGame() {\n    setPlayer1('');\n    setPlayer2('');\n    setBegin(false);\n    setMatrix(grid);\n  }\n\n  function boxClick(position) {\n    let matrixShadow = [...matrix];\n    let xPlacementShadow = [...xPlacement];\n    let oPlacementShadow = [...oPlacement];\n\n    if (matrixShadow[position] !== \"\") {\n      alert(\"You cannot override the value of that block!\");\n    }\n    else {\n      if (turn === 1) {\n        matrixShadow[position] = 'X';\n        xPlacementShadow.push(position);\n        setXPlacement(xPlacementShadow);\n        setTurn(2);\n      } else {\n        matrixShadow[position] = '0';\n        oPlacementShadow.push(position);\n        setOPlacement(oPlacementShadow);\n        setTurn(1);\n      }\n      setNumberOfTurns(numberOfTurns + 1);\n      setMatrix(matrixShadow);\n    }\n  }\n\n  function calculateResult() {\n    resultSet.forEach(solution => {\n      if (xPlacement.includes(solution[0]) &&\n        xPlacement.includes(solution[1]) &&\n        xPlacement.includes(solution[2])) {\n        alert(player1 + \" is the winner\");\n        setWinnerAnnounced(true);\n      }\n      if (oPlacement.includes(solution[0]) &&\n        oPlacement.includes(solution[1]) &&\n        oPlacement.includes(solution[2])) {\n        alert(player2 + \" is the winner\");\n        setWinnerAnnounced(true);\n      }\n\n    });\n  }\n\n  useEffect(() => {\n    if (numberOfTurns > 4) {\n      calculateResult();\n    }\n    if (numberOfTurns === 9) {\n      alert('Its a draw');\n      setWinnerAnnounced(true);\n    }\n  }, [numberOfTurns]);\n\n  function playAgain() {\n    setMatrix(grid);\n    setWinnerAnnounced(false);\n    setNumberOfTurns(0);\n    setTurn(1);\n    setXPlacement([]);\n    setOPlacement([]);\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <h1 className='heading'>Lets Play Tic Tac Toe</h1>\n      </Row>\n      {begin === false ?\n        <Row className=\"description\">\n          A two player tic tac toe game. Both players enter their names and click the begin button. Once the button is pressed, Player 1 gets X and Player 2 gets O. The game begins with player 1 who can decide where to put the X. Then the turn goes to player 2 who can do the same. The game will check for 3 consecutive X's or 0's, whoever makes the first strike wins. Game is either a win or a draw. Game announces winner at the end.\n          </Row>\n        : null}\n      {begin === false ?\n        <Form>\n          <Form.Row>\n            <Col>\n              <Form.Control placeholder=\"Player 1 Name\" onChange={handlePlayer1Change} value={player1} />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Player 2 Name\" onChange={handlePlayer2Change} value={player2} />\n            </Col>\n          </Form.Row>\n        </Form>\n        : null}\n      {begin === false ?\n        <Row className=\"buttonArea\">\n          <Button variant=\"outline-success\" onClick={initiateGame}>Begin!</Button>\n          <Button variant=\"outline-danger\" className=\"reset-btn\" onClick={resetGame}>Reset!</Button>\n        </Row>\n        : null}\n\n      {begin === true ?\n        <div className=\"gameArea\">\n          {winnerAnnounced === false ?\n            <div>\n              Player 1 is {player1} and will be using X <br />\n                    Player 2 is {player2} and will be using 0 <br /><br />\n                    Number of turns so far: {numberOfTurns} <br />\n              <b>Its {turn === 1 ? player1 : player2}'s turn now!</b> <br />\n            </div>\n            : null}\n\n          {winnerAnnounced === true ?\n            <Row className=\"justify-content-center\">\n              <Button style={{ 'marginTop': '20px', 'marginRight': '10px' }} size=\"lg\" variant=\"info\" onClick={() => window.location.reload(false)}>Restart!</Button>\n              <Button style={{ 'marginTop': '20px' }} size=\"lg\" variant=\"success\" onClick={playAgain}>Play Again!</Button>\n            </Row>\n            : null}\n\n          <div className=\"tableArea\">\n            <Row>\n              <Col>\n                <table border=\"1px\">\n                  <tbody>\n                    <tr>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(0)} disabled={winnerAnnounced}> {matrix[0]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(1)} disabled={winnerAnnounced}> {matrix[1]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(2)} disabled={winnerAnnounced}> {matrix[2]} </button></td>\n                    </tr>\n                    <tr>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(3)} disabled={winnerAnnounced}> {matrix[3]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(4)} disabled={winnerAnnounced}> {matrix[4]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(5)} disabled={winnerAnnounced}> {matrix[5]} </button></td>\n                    </tr>\n                    <tr>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(6)} disabled={winnerAnnounced}> {matrix[6]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(7)} disabled={winnerAnnounced}> {matrix[7]} </button></td>\n                      <td><button className=\"boxButton\" onClick={() => boxClick(8)} disabled={winnerAnnounced}> {matrix[8]} </button></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </Col>\n            </Row>\n          </div>\n          {winnerAnnounced === false ?\n            <Row className=\"endGameBtn\">\n              <Col>\n                <Button variant=\"danger\" onClick={() => window.location.reload(false)}>End Game</Button>\n              </Col>\n            </Row>\n            : null}\n        </div>\n        : null}\n\n    </Container>\n  )\n}\n\nexport default TicTacToeComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}